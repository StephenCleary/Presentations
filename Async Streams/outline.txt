- Why use asynchrony?
- async/await adoption across languages
  - Promises and Futures
- Promise/Future limitation: only one return value
- async and yield (generators/iterables/enumerators)
- Introducing async streams
  - An ideal use case for async streams
- Async streams vs observables
  - Use cases for observables over async streams
- Creating async streams
  - Using ValueTask
- Consuming async streams
  - Exceptions
  - Avoiding context with ConfigureAwait
- Async streams and producer/consumer queues
- Cancellation when consuming async streams
- Cancellation when producing async streams
