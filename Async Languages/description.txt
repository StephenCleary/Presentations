The async keyword seems to be taking over the world! After a humble beginning in F#, it quickly moved to C#/VB, and today it is invading many other “big” languages: JavaScript (ES2017), Python, and C++ (“coroutines” proposal).

So, what’s the big deal about async? This session is a conceptual overview of why asynchrony is important,
especially in modern computing. At a high level, we’ll discuss how language support for asynchrony helps developers write more clear, maintainable code. At the core of all these languages, the basic async/await transformation is quite similar.

We’ll take a look at examples in an abstract language and show how new keywords simplify all previous patterns of asynchrony. We’ll see why async needs to be a language feature – that is, how an actual async keyword helps developers express code in a way that a library could not.

By the end of this session, you’ll have a clear grasp of why async is so helpful, as well as a sense of how to apply it to your own projects, regardless of language.